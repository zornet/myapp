{"version":3,"sources":["components/PrmCard.js","components/PrmCardList.js","components/Home.js","components/Team.js","components/assets/images/team.png","components/ErrorPage.js","components/Prediction.js","components/Statistics.js","components/TeamScripts.js","components/CreateAnalysis.js","history.js","components/CleanUpHelper.js","components/WallOfFame.js","components/WallOfFameIMS.js","components/CreateEpicsHA22.js","components/CreateStoriesWithSubtasks.js","components/FolderStructure.js","components/NamingConventions.js","components/assets/images/logo-conti.png","components/Footer.js","components/Contact.js","components/Instructions.js","components/PrmNavBar.js","components/ConfluenceImporter.js","App.js","serviceWorker.js","index.js"],"names":["PrmCard","props","profile","className","src","this","image_url","alt","display","card_name","card_first_name","card_title","React","Component","PrmCardList","team","map","element","Home","Team","class","ErrorPage","style","alignSelf","fontSize","textAlign","marginTop","marginBottom","errorText","TeamPicture","maxWidth","marginLeft","marginRight","Prediction","state","textboxValue","redirectToTicket","ticket","prediction","checkedB","ciscoDisplayState","requestFailed","errorMessage","handleTextBoxChnage","bind","handleClickEvent","handleSwitch","event","setState","target","value","featureRequest","fetch","then","response","ok","json","Error","status","data","catch","error","console","log","to","pathname","cisco","Switch","checked","onChange","color","name","inputProps","type","placeholder","Button","variant","onClick","Statistics","statistics","getStatistics","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","TeamScripts","List","ListItem","href","btnStyle","ListItemText","primary","secondary","CreateAS","epicKeys","analysisKeys","tickets","show","handleButtonClick","method","Object","keys","getValues","dictionary","i","key","justifyContent","flexDirection","item","ListGroup","Item","rel","createBrowserHistory","CleanUpHelper","query","issues","handleInputChange","OnSearch","preventDefault","getIssuesFromQuery","getRequest","axios","get","minWidth","aria-label","action","issuetypes_rules","Results","nrOkIssues","nrNotOkIssues","WallOfFame","makeProjectDropdownItem","X","Dropdown","updateSelectedProject","makeIssuetypeDropdownItem","updateSelectedIssuetype","serializedProjects","selectedProject","selectedIssuetype","getSerializedProjects","getResults","newValue","post","nr_ok_issues","nr_not_ok_issues","Toggle","id","Menu","disabled","project","RenderTable","rules","respects_runtime_transitions","Table","striped","bordered","hover","nr_ok","nr_not_ok","WallOfFameIMS","goButton","CreateEpicsHA22","CreateSS","ticketInfo","FolderStructure","NamingConventions","Footer","logo","Contact","for","rows","Instructions","Card","Header","Body","Title","Text","PrmNavBar","Navbar","bg","border","Brand","Nav","defaultActiveKey","Link","Form","inline","FormControl","ConfluenceImporter","sourceLink","destinationLink","jopUser","jopPassword","sourceId","adasUser","adasPassword","destinationID","destinationSpace","running","msg","handleChange","handleSelectChange","emptyFiels","alert","request","options","label","Spinner","ref","animation","hidden","App","Fragment","history","exact","path","render","errorChange","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f5aa0e27.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass PrmCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.profile = props.profile;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"prm-card\">\r\n        <img\r\n          className=\"profile-image\"\r\n          src={this.profile.image_url}\r\n          alt=\"Avatar\"\r\n          display=\"block\"\r\n        />\r\n        <h4>\r\n          <b>{this.profile.card_name}</b>\r\n\r\n        </h4>\r\n        <h4>\r\n          <b>{this.profile.card_first_name}</b>\r\n        </h4>\r\n        <p>{this.profile.card_title}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrmCard;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport PrmCard from \"./PrmCard\";\r\nimport team from \"../components/assets/team.json\";\r\n\r\n\r\nclass PrmCardList extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"team-description\">\r\n        <div className=\"prm-card-list\">\r\n          {team.map(( element) => (\r\n            <PrmCard profile={element} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrmCardList;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport PrmCardList from \"./PrmCardList\";\r\n\r\n\r\nclass Home extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"prm-background\">\r\n        <div className =\"team-description\">\r\n          <p className =\"p-title\">Problem Resolution Management​ & Configuration Management</p> \r\n          <p className =\"p-location\">Iasi</p> \r\n        </div>\r\n        <PrmCardList></PrmCardList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport PrmCardList from \"./PrmCardList\";\r\nimport \"../Styles/Team.css\"\r\n\r\nclass Team extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div class =\"prm-background\">\r\n        <div class =\"team-description\">\r\n          <p class =\"p-title\">Problem Resolution Management​ & Configuration Management</p> \r\n          <p class =\"p-location\">Iasi</p> \r\n        </div>\r\n        <PrmCardList></PrmCardList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Team;","export default __webpack_public_path__ + \"static/media/team.518f387d.png\";","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TeamPicture from \"./assets/images/team.png\";\r\n\r\nclass ErrorPage extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div style={{alignSelf:''}}>\r\n        <h1  style = {{fontSize:'26px', textAlign:'center', marginTop:'2vh', marginBottom:0}}>Error : {this.props.errorText}</h1>\r\n        <img src = {TeamPicture} style = {{display:'block', maxWidth:'55vw', marginLeft:\"auto\", marginRight:\"auto\"}}></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorPage;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass Prediction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      textboxValue: \"\",\r\n      redirectToTicket: false,\r\n      ticket: \"\",\r\n      prediction: \"\",\r\n      checkedB: false,\r\n      ciscoDisplayState: \"Cisco Off\",\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    };\r\n    this.handleTextBoxChnage = this.handleTextBoxChnage.bind(this);\r\n    this.handleClickEvent = this.handleClickEvent.bind(this);\r\n    this.handleSwitch = this.handleSwitch.bind(this);\r\n  }\r\n\r\n  handleTextBoxChnage(event) {\r\n    this.setState({ textboxValue: event.target.value });\r\n  }\r\n\r\n  handleClickEvent(event) {\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\r\n    fetch(featureRequest)\r\n      .then((response) => { if(!response.ok) {\r\n        throw new Error(response.status);\r\n        }\r\n        else return response.json()})\r\n      .then((data) => {\r\n        this.setState({\r\n          ticket: data,\r\n        });\r\n        this.setState({\r\n          redirectToTicket: true,\r\n        });\r\n      }).catch((error) => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        console.log('error: ' + error);\r\n        console.log('error: ' + this.state.requestFailed);\r\n        console.log('error: ' + this.state.errorMessage);\r\n      });\r\n  }\r\n\r\n  handleSwitch() {\r\n    if (this.state.checkedB === false) {\r\n      this.setState({\r\n        checkedB: true,\r\n        ciscoDisplayState: \"Cisco On\",\r\n      });\r\n    }\r\n    if (this.state.checkedB === true) {\r\n      this.setState({\r\n        checkedB: false,\r\n        ciscoDisplayState: \"Cisco Off\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    \r\n    if (this.state.redirectToTicket === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/ticket\",\r\n            state: {\r\n              ticket: this.state.ticket,\r\n              cisco: this.state.checkedB,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div class=\"row-flex ml-2 mt-4\">\r\n          <h3>{this.state.ciscoDisplayState}</h3>\r\n          <Switch\r\n            checked={this.state.checkedB}\r\n            onChange={this.handleSwitch}\r\n            color=\"primary\"\r\n            name=\"checkedB\"\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n        </div>\r\n        <div class=\"prediction-form ml-2\">\r\n          <input\r\n            class=\"text-box\"\r\n            type=\"text\"\r\n            placeholder=\"Issue link\"\r\n            onChange={this.handleTextBoxChnage}\r\n          />\r\n          <Button variant=\"primary\" className='scripts-btn' onClick={this.handleClickEvent}>\r\n            Predict\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prediction;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {  LineChart,  Line,  XAxis, YAxis, CartesianGrid, Tooltip,  Legend,} from \"recharts\";\r\n\r\n\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statistics: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStatistics();\r\n  }\r\n\r\n  getStatistics() {\r\n    let url = \"http://127.0.0.1:5000/api/tickets/statistics\";\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((statistics) => this.setState({ statistics: statistics }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LineChart\r\n          width={900}\r\n          height={540}\r\n          data={this.state.statistics}\r\n          margin={{\r\n            top: 70,\r\n            right: 30,\r\n            left: 10,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"days\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"tickets\"\r\n            stroke=\"#8884d8\"\r\n            activeDot={{ r: 8 }}\r\n          />\r\n        </LineChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from 'react-bootstrap/Button';\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass TeamScripts extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"prm-background\">\r\n            <div>\r\n                <List >\r\n\r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/jirascripts/create-analysis\" style={btnStyle} className='scripts-btn'>JIRA</Button>\r\n                        <ListItemText primary=\"ADC420HA22 Analysis Story creation\" secondary=\"Create Analysis Stories for ADC420HA22 Epics in Classified\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/jirascripts/create-stories-and-subtasks\" style={btnStyle} className='scripts-btn'>JIRA</Button>\r\n                        <ListItemText primary=\"ADC420HA22 Stories/subtasks creation\" secondary=\"Create Stories with subtasks for ADC420HA22\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/jirascripts/clean-up\" style={btnStyle} className='scripts-btn'>JIRA</Button>\r\n                        <ListItemText primary=\"Workflow's guardian\" secondary=\"Clean-up helper - Return issues which don't respect the runtime transition\" />\r\n                    </ListItem>\r\n                    \r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/jirascripts/walloffame\" style={btnStyle} className='scripts-btn'>JIRA</Button>\r\n                        <ListItemText primary=\"Wall Of Fame\" secondary=\"See how many tickets respect the Unicorn Workflow for each project\" />\r\n                    </ListItem>\r\n                    \r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/jirascripts/script2\" style={btnStyle} className='scripts-btn'>JIRA</Button>\r\n                        <ListItemText primary=\"Generate epics in ADC420HA22\" secondary=\"This script clones Feature Requests from project HGEN1L1 with Area of Resposnsibilty ADCU into the project ADC420HA22  \" />\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/imsscripts/naming-conventions\" style={btnStyle} className='scripts-btn'>IMS</Button>\r\n                        <ListItemText primary=\"Naming conventions\" secondary=\"Checks the naming convetion for all of the files stored in IMS project in regards to ADAS stages rules found in CM Plan\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/imsscripts/walloffameims\" style={btnStyle} className='scripts-btn'>IMS</Button>\r\n                        <ListItemText primary=\"Wall Of Fame for IMS\" secondary=\"\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/imsscripts/folder-structure\" style={btnStyle} className='scripts-btn'>IMS</Button>\r\n                        <ListItemText primary=\"Folder Structure\" secondary=\"\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <Button href=\"http://localhost:3000/confluence\" style={btnStyle} className='scripts-btn'>CONF</Button>\r\n                        <ListItemText primary=\"Confluence Sync\" secondary=\"\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst btnStyle={\r\n    margin:10,\r\n}\r\n\r\nexport default TeamScripts;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, ListGroup } from \"react-bootstrap\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass CreateAS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      epicKeys:[],\r\n      analysisKeys: [],\r\n      tickets:'',\r\n      show: \"false\",\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    }\r\n\r\n    this.handleButtonClick=this.handleButtonClick.bind(this);\r\n\r\n  }\r\n\r\n   handleButtonClick(event){\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/jira/create-analysis\";\r\n    fetch(featureRequest, {method:'POST'})\r\n      .then((response) => { if(!response.ok) {\r\n        throw new Error(response.status);\r\n        }\r\n        else return response.json()})\r\n      .then((data) => {\r\n        this.setState({\r\n          epicKeys: Object.keys(data),\r\n          analysisKeys: this.getValues(data),\r\n          tickets: data,\r\n          show: \"true\",\r\n        });\r\n        console.log(this.state.tickets);\r\n      }).catch((error) => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        console.log('error: ' + error);\r\n        console.log('error: ' + this.state.requestFailed);\r\n        console.log('error: ' + this.state.errorMessage);\r\n      });\r\n     \r\n      // axios.post('http://127.0.0.1:5000/api/jira/create-analysis').then(response=>{\r\n      //   console.log(response);\r\n      //   alert(Object.keys(response.data[1]));\r\n      // }).catch(error=>{console.log(error)})\r\n  }\r\n  \r\n  getValues(dictionary){\r\n    var value=[];\r\n    var i=0;\r\n    for(var key in dictionary){\r\n      value[i] = dictionary[key];\r\n      i++;\r\n    }\r\n      return value;\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    return (\r\n      <div class=\"prm-background\">\r\n            <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n              <h1 className='script-title'>ADC420HA22 Analysis Story creation</h1>\r\n              <Button className='scripts-btn' onClick={this.handleButtonClick}>Create Analysis story for epics in classified</Button>\r\n            </div>\r\n            {\r\n              console.log(this.state.tickets)\r\n            }\r\n          \r\n            {\r\n            Object.keys(this.state.tickets).map(item =>\r\n              <div>\r\n              <ListGroup.Item>\r\n                Analysis story \r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + this.state.tickets[item]}>\r\n                  {this.state.tickets[item]}\r\n                  </a> \r\n                  created for \r\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + item}>\r\n                    {item}\r\n                  </a>\r\n              </ListGroup.Item>\r\n              </div>\r\n              )\r\n            }\r\n      </div> \r\n        \r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CreateAS;","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport ErrorPage from './ErrorPage';\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass CleanUpHelper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n      issues: [],\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.OnSearch = this.OnSearch.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    event.preventDefault();\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  OnSearch() {\r\n    this.getIssuesFromQuery(this.state.query);\r\n  }\r\n\r\n  async getIssuesFromQuery(query) {\r\n    let getRequest =\r\n      \"http://127.0.0.1:5000/api/jira/clean-up-helper/\" + this.state.query;\r\n    axios.get(getRequest)\r\n      .then(response => {\r\n        this.setState({ issues: response.data,\r\n        });\r\n      }).catch(error => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        \r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div class=\"clean-up\" style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n          <h1 className='script-title'>Issues which don't respect the runtime transition</h1>\r\n          <div style={{alignSelf:\"center\"}}>\r\n            <input style={{minWidth:'600px', textAlign:\"center\", alignSelf:'center'}} class=\"text-box\" type=\"text\" aria-label=\"Large\" placeholder=\"Enter your query...\" onChange={this.handleInputChange} />\r\n            <Button className='scripts-btn' variant=\"dark\" onClick={this.OnSearch}>Search</Button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {\r\n          this.state.issues.map(item =>\r\n            <ListGroup.Item action target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://jira-adas.zone2.agileci.conti.de/browse/\" + item}>\r\n              {item}\r\n            </ListGroup.Item>\r\n\r\n          )\r\n        }\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default CleanUpHelper;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap'\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport \"../Styles/WallOfFame.css\"\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\n\r\nconst issuetypes_rules = {\r\n    'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\r\n    'Story': ['is_linked_to_parent_in_corresponding_state'],\r\n    'Epic': ['epic doesnt_have_issues_if_in_invalid_state'],\r\n    'All issuetypes': []\r\n}\r\n\r\n\r\n\r\nfunction Results(props){\r\n    if(props.nrOkIssues === 'not set'){\r\n        return(\r\n          <p> </p>  \r\n        );\r\n    }\r\n    return(\r\n        <div class=\"walloffame-results\">\r\n            <h3><b>Valid</b> Tickets: {props.nrOkIssues}</h3>\r\n            <h3><b>Invalid</b> Tickets: {props.nrNotOkIssues}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass WallOfFame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serializedProjects: [],\r\n            nrOkIssues: 'not set',\r\n            nrNotOkIssues: 'not set',\r\n            selectedProject: 'choose project',\r\n            selectedIssuetype: 'All issuetypes'\r\n        }\r\n        this.getSerializedProjects = this.getSerializedProjects.bind(this);\r\n        this.updateSelectedProject = this.updateSelectedProject.bind(this);\r\n        this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\r\n        this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\r\n        this.getResults = this.getResults.bind(this);\r\n        this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this);\r\n\r\n        //calling this in the constructor in order to know what projects are available from the start\r\n        // console.log(\"urmeaza sa apelez getserializedprojects\");\r\n        // this.getSerializedProjects();\r\n        // console.log(this.state.serializedProjects);\r\n    }\r\n    async getSerializedProjects() {\r\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFame/serialized-projects\";\r\n        await axios.get(url)\r\n            .then(response => {\r\n                this.setState({ serializedProjects: response.data });\r\n            });\r\n    }\r\n\r\n    updateSelectedProject(newValue) {\r\n        this.setState({ selectedProject: newValue });\r\n    }\r\n    makeProjectDropdownItem = function (X) {\r\n        return (\r\n            <Dropdown.Item onClick={() => this.updateSelectedProject(X)}>{X}</Dropdown.Item>\r\n        );\r\n    }\r\n    updateSelectedIssuetype(newValue) {\r\n        this.setState({ selectedIssuetype: newValue });\r\n    }\r\n    makeIssuetypeDropdownItem = function (X) {\r\n        return (\r\n            <Dropdown.Item onClick={() => this.updateSelectedIssuetype(X)}>{X}</Dropdown.Item>\r\n        );\r\n    }\r\n    getResults(){\r\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFame/get-results\"\r\n        axios.post(url,{\r\n            \"project\": this.state.selectedProject,\r\n            \"issuetypes\": [this.state.selectedIssuetype]\r\n        }).then(response => {\r\n            console.log(response.data);\r\n            this.setState({ nrOkIssues: response.data.nr_ok_issues,\r\n                            nrNotOkIssues: response.data.nr_not_ok_issues});\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"prm-background\">\r\n                <h1 class=\"script-title\">WallOfFame</h1>\r\n                <div class=\"dropdowns\">\r\n                    <Dropdown   className='mydropdown'>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {this.state.selectedProject}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            {this.state.serializedProjects.map(this.makeProjectDropdownItem)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Dropdown  className='mydropdown'>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {this.state.selectedIssuetype}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <div>\r\n                        <Button className='scripts-btn' disabled={this.state.selectedProject === 'choose project'} onClick={this.getResults}>Go</Button>\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <Button disabled={this.state.selectedProject == 'choose project'}>Go</Button>\r\n                </div> */}\r\n                {/* <Greetings project={this.state.selectedProject} issuetype={this.state.selectedIssuetype}></Greetings> */}\r\n                <Results  nrOkIssues={this.state.nrOkIssues} nrNotOkIssues={this.state.nrNotOkIssues} project={this.state.selectedProject}></Results>\r\n            </div>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        console.log(\"FROM DIDMOUNT\");\r\n        console.log(\"urmeaza sa apelez getserializedprojects\");\r\n        await this.getSerializedProjects();\r\n        console.log(this.state.serializedProjects);\r\n    }\r\n}\r\n\r\n\r\nexport default WallOfFame;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap'\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\nconst issuetypes_rules = {\r\n    'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\r\n    'Realization Order': ['is_linked_to_parent_in_corresponding_state'],\r\n    'Feature Request': ['feature request doesnt_have_issues_if_in_invalid_state'],\r\n    'Change Request': ['change request doesnt_have_issues_if_in_invalid_state'],\r\n    'Analysis Task': ['analysis task doesnt_have_issues_if_in_invalid_state'],\r\n    'All issuetypes': []\r\n}\r\n\r\nfunction Greetings(props) {\r\n    return (\r\n        <div>\r\n            <h2>{props.project}</h2>\r\n            <h2>{props.issuetype}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Results(props) {\r\n    if (props.project === '') {\r\n        return (\r\n            <p> </p>\r\n        );\r\n    }\r\n    return (\r\n        <div class=\"walloffame-results\">\r\n            <h3>Number of ok tickets: {props.nrOkIssues}</h3>\r\n            <h3>Number of not ok tickets:{props.nrNotOkIssues}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction RenderTable(props) {\r\n    if (props.rules === '') {\r\n        return (\r\n            <p> </p>\r\n        );\r\n    }\r\n    return (\r\n        console.log(props.rules.respects_runtime_transitions),\r\n        <Table striped bordered hover variant=\"dark\" className='myTable'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Rule</th>\r\n                    <th>Tickets which respect the rule</th>\r\n                    <th>Tickets which don't respect the rule</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    Object.keys(props.rules).map(item =>\r\n                        <tr>\r\n                            <td>{item}</td>\r\n                            <td>{props.rules[item].nr_ok}</td>\r\n                            <td>{props.rules[item].nr_not_ok}</td>\r\n                        </tr>\r\n                    )}\r\n            </tbody>\r\n        </Table>)\r\n}\r\n\r\nclass WallOfFameIMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            goButton: 0,\r\n            serializedProjects: [],\r\n            nrOkIssues: 'not set',\r\n            nrNotOkIssues: 'not set',\r\n            rules: '',\r\n            selectedProject: 'choose project',\r\n            selectedIssuetype: 'All issuetypes'\r\n        }\r\n        this.getSerializedProjects = this.getSerializedProjects.bind(this);\r\n        this.updateSelectedProject = this.updateSelectedProject.bind(this);\r\n        this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\r\n        this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\r\n        this.getResults = this.getResults.bind(this);\r\n        this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this);\r\n\r\n        //calling this in the constructor in order to know what projects are available from the start\r\n        console.log(\"urmeaza sa apelez getserializedprojects\");\r\n        this.getSerializedProjects();\r\n        console.log(this.state.serializedProjects);\r\n    }\r\n    async getSerializedProjects() {\r\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/serialized-queries\";\r\n        await axios.get(url)\r\n            .then(response => {\r\n                this.setState({ serializedProjects: response.data });\r\n            });\r\n    }\r\n\r\n    updateSelectedProject(newValue) {\r\n        this.setState({ selectedProject: newValue });\r\n    }\r\n    makeProjectDropdownItem = function (X) {\r\n        return (\r\n            <Dropdown.Item onClick={() => this.updateSelectedProject(X)}>{X}</Dropdown.Item>\r\n        );\r\n    }\r\n    updateSelectedIssuetype(newValue) {\r\n        this.setState({ selectedIssuetype: newValue });\r\n    }\r\n    makeIssuetypeDropdownItem = function (X) {\r\n        return (\r\n            <Dropdown.Item onClick={() => this.updateSelectedIssuetype(X)}>{X}</Dropdown.Item>\r\n        );\r\n    }\r\n    getResults() {\r\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/get-results\"\r\n        axios.post(url, {\r\n            \"filename\": this.state.selectedProject,\r\n            \"issuetypes\": [this.state.selectedIssuetype]\r\n        }).then(response => {\r\n            this.setState({\r\n                goButton: 1,\r\n                rules: response.data.rules,\r\n                nrOkIssues: response.data.nr_ok_issues,\r\n                nrNotOkIssues: response.data.nr_not_ok_issues\r\n            });\r\n            console.log(this.state.rules);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state.rules)\r\n        return (\r\n            <div className=\"prm-background\">\r\n                <h1 class=\"script-title\">WallOfFame for IMS</h1>\r\n                <div class=\"dropdowns\">\r\n                    <Dropdown className='mydropdown'>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {this.state.selectedProject}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            {this.state.serializedProjects.map(this.makeProjectDropdownItem)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Dropdown className='mydropdown'>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {this.state.selectedIssuetype}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <div>\r\n                        <Button className='scripts-btn' disabled={this.state.selectedProject === 'choose project'} onClick={this.getResults}>Go</Button>\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <Button disabled={this.state.selectedProject == 'choose project'}>Go</Button>\r\n                </div> \r\n                 <Greetings project={this.state.selectedProject} issuetype={this.state.selectedIssuetype}></Greetings> */}\r\n                {/* <Results nrOkIssues={this.state.nrOkIssues} nrNotOkIssues={this.state.nrNotOkIssues} project={this.state.selectedProject}></Results> */}\r\n                <RenderTable rules={this.state.rules}></RenderTable>\r\n            </div>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        console.log(\"FROM DIDMOUNT\");\r\n        console.log(\"urmeaza sa apelez getserializedprojects\");\r\n        await this.getSerializedProjects();\r\n        console.log(this.state.serializedProjects);\r\n    }\r\n}\r\n\r\n\r\nexport default WallOfFameIMS;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, ListGroup } from \"react-bootstrap\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\n  \r\nclass CreateEpicsHA22 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      tickets:\"\",\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    }\r\n    this.handleClickEvent=this.handleClickEvent.bind(this);\r\n  }\r\n\r\n  handleClickEvent(event){\r\n    let featureRequest =\r\n    \"http://127.0.0.1:5000/api/jira/CreateEpicsHA22\" ;\r\n  fetch(featureRequest,{method:\"POST\"})\r\n    .then((response) => { if(!response.ok) {\r\n      throw new Error(response.status);\r\n      }\r\n      else return response.json()})\r\n    .then((data) => {\r\n      this.setState({\r\n        tickets: data,\r\n      })}).catch((error) => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        console.log('error: ' + error);\r\n        console.log('error: ' + this.state.requestFailed);\r\n        console.log('error: ' + this.state.errorMessage);\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    return (\r\n      <div class=\"prm-background\">\r\n\r\n          <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n            <h1 className='script-title'>Create epics in ADC420HA22</h1> \r\n            <Button className='scripts-btn' onClick={this.handleClickEvent}>Run Script </Button>\r\n          </div>\r\n            { Object.keys(this.state.tickets).map(item =>\r\n             <div>\r\n                <ListGroup.Item action target=\"_blank\" \r\n                                rel=\"noopener noreferrer\"  \r\n                                href={\"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + this.state.tickets[item]}>\r\n                  {\r\n                    this.state.tickets[item]\r\n                  }\r\n                </ListGroup.Item>\r\n              </div>\r\n              ) }\r\n            </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CreateEpicsHA22;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass CreateSS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketInfo:[],\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    }\r\n\r\n    this.handleButtonClick=this.handleButtonClick.bind(this);\r\n\r\n  }\r\n\r\n  handleButtonClick(event){\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/jira/create-stories\";\r\n    fetch(featureRequest, {method:'POST'})\r\n      .then((response) => { if(!response.ok) {\r\n        throw new Error(response.status);\r\n        }\r\n        else return response.json()})\r\n      .then((data) => {\r\n        this.setState({\r\n          ticketInfo: data,\r\n        });\r\n\r\n      }).catch((error) => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        console.log('error: ' + error);\r\n        console.log('error: ' + this.state.requestFailed);\r\n        console.log('error: ' + this.state.errorMessage);\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    \r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n          <h1 className='script-title' >ADC420HA22 Stories/subtasks creation</h1>\r\n          <Button className='scripts-btn' onClick={this.handleButtonClick}>Create Stories for epics in accepted</Button>\r\n        </div> \r\n        {\r\n          console.log(this.state.ticketInfo)\r\n        }\r\n        {\r\n            this.state.ticketInfo.map(item =>\r\n              <div>\r\n                \r\n              <ListGroup.Item>\r\n                Story <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + item}>{item}</a> and its subtasks created succesfully.\r\n              </ListGroup.Item>\r\n              </div>\r\n            )\r\n            }     \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CreateSS;\r\n\r\n\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass FolderStructure extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\",\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    }\r\n\r\n    this.handleButtonClick=this.handleButtonClick.bind(this);\r\n\r\n  }\r\n\r\n  handleButtonClick(event){\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/ims/run_folder_structure\";\r\n    fetch(featureRequest, {method:'POST'})\r\n      .then((response) => { if(!response.ok) {\r\n        throw new Error(response.status);\r\n        }\r\n        else return response.json()})\r\n      .then((data) => {\r\n        this.setState({\r\n          status: data,\r\n        })\r\n      }).catch((error) => {\r\n          this.setState({errorMessage: \"Can't get response from server\"});\r\n          this.setState({requestFailed: true});\r\n          console.log('error: ' + error);\r\n          console.log('error: ' + this.state.requestFailed);\r\n          console.log('error: ' + this.state.errorMessage);\r\n        });\r\n  }\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n          <h1 className='script-title'>Folder Structure</h1>\r\n          <Button className='scripts-btn' onClick={this.handleButtonClick}>Start app</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default FolderStructure;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass NamingConventions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: \"\",\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    }\r\n\r\n    this.handleButtonClick=this.handleButtonClick.bind(this);\r\n\r\n  }\r\n\r\n  handleButtonClick(event){\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/ims/run-naming-conventions\";\r\n    fetch(featureRequest, {method:'POST'})\r\n      .then((response) => { if(!response.ok) {\r\n        throw new Error(response.status);\r\n        }\r\n        else return response.json()})\r\n      .then((data) => {\r\n        this.setState({\r\n          status: data,\r\n        });\r\n      }).catch((error) => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        console.log('error: ' + error);\r\n        console.log('error: ' + this.state.requestFailed);\r\n        console.log('error: ' + this.state.errorMessage);\r\n      });\r\n      \r\n  }\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n          <h1 className='script-title'>Naming conventions for X</h1>\r\n          <Button className='scripts-btn' onClick={this.handleButtonClick}>Start app</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default NamingConventions;\r\n","export default __webpack_public_path__ + \"static/media/logo-conti.1fb34e65.png\";","import React from 'react';\r\nimport logo from \"./assets/images/logo-conti.png\";\r\nimport \"../Styles/Footer.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className=\"main-footer\">\r\n            <div className=\"footer-container\">\r\n                <div className=\"footer-row\">\r\n                    {/* column1 */}\r\n                    <div className=\"footer-col\">\r\n                        <img alt='Continental Logo' src={logo} className=\"conti-logo\" />\r\n                    </div>\r\n\r\n                    <div className=\"footer-rights\">\r\n                    <p> &copy; Continental all rights reserved</p>\r\n                    </div>\r\n\r\n                    {/* column2 */}\r\n                    <div className=\"footer-col2\">\r\n                        <h4>Contact</h4>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>Alexandra Fofel</li>\r\n                            <li>e-mail: alexandra.fofel@continental-corporation.com</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../Styles/Contact.css\"\r\n\r\nclass Contact extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"prm-background\">\r\n        <form className='contact-form'>\r\n          <div class=\"form-group\">\r\n            <label >Request summary</label>\r\n            <input type=\"email\" class=\"form-control\" ></input>\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">A short description of your request</small>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlTextarea1\">How can we help you?</label>\r\n            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n            <small id=\"emailHelp\" class=\"form-text text-muted\">Tell us how can we help you in a few more words</small>\r\n          </div>\r\n          <Button className='scripts-btn' type=\"submit\" >Submit</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"../Styles/Instructions.css\"\r\n\r\n\r\nclass Instructions extends React.Component {\r\n   \r\n    render() {\r\n        return (\r\n            <div class=\"prm-background\">\r\n                <div className='instructions-wrapper'>\r\n                    <Card className='instructions'>\r\n                        <Card.Header className='instructions-card-header'>PRM Platform</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title className='instructions-card-title'>Installing PRM Platform</Card.Title>\r\n                            <Card.Text>\r\n                                First you'll have to get from github the last version of 'src' and 'public' versions. After doing that, create a new react app, using the command \"npx create-react-app ~folder_name~\". After\r\n                                the app was created, you will have to replace 'src' and 'public' with the versions from github. Last step is installing the packages you need. For that, you will\r\n                                execute the command 'npm start' in the terminal of the main app folder (~folder_name~). Errors will be thrown, and you will have to install the package shown in the\r\n                                warning. Repeat last step until everything works fine. :)\r\n                            </Card.Text>\r\n                            <Card.Title className='instructions-card-title'>Commands used by React</Card.Title>\r\n                            <Card.Text>\r\n                                -npm start (start the react app and the live server hosted on localhost:3000)\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                -npx create-react-app ~folder_name~ (create a folder with the name ~folder_name~ with a new React App)\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    \r\n\r\n                    <Card className='instructions'>\r\n                        <Card.Header className='instructions-card-header'>Here you place the topic title</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title className='instructions-card-title'>Here your place the sub-topic title</Card.Title>\r\n                            <Card.Text>\r\n                                Here you place the card text\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Instructions;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport logo from \"./assets/images/logo-conti.png\";\r\nimport \"../Styles/PrmNavBar.css\"\r\n\r\n\r\nclass PrmNavBar extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Navbar id='bootstrap-overrides' className='prm-navbar' bg=\"primary\" variant=\"dark\" border=\"dark\">\r\n        <Navbar.Brand href=\"http://localhost:3000/\" ><img alt=\"Continental Logo\" src={logo} className=\"conti-logo\"></img></Navbar.Brand>\r\n        <Nav className=\"mr-auto\" defaultActiveKey=\"#home\">\r\n          <Nav.Link href=\"http://localhost:3000/team\">Team</Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/statistics\">\r\n            General Statistics\r\n          </Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/prediction\">\r\n            Ticket Prediction\r\n          </Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/scripts\">TeamScripts</Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/contact\">Contact</Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/instructions\">Instructions</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-light\">Search</Button>\r\n        </Form>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrmNavBar;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Select from 'react-select';\r\n\r\nexport default class ConfluenceImporter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sourceLink: \"\",\r\n            destinationLink: \"\",\r\n            jopUser: \"\",\r\n            jopPassword: \"\",\r\n            sourceId: \"\",\r\n            adasUser: \"\",\r\n            adasPassword: \"\",\r\n            destinationID: \"\",\r\n            destinationSpace: \"\",\r\n            running: false,\r\n            msg: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: value\r\n        });\r\n    }\r\n\r\n    handleSelectChange(event) {\r\n        const value = event.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.name]: value\r\n        });\r\n    }\r\n\r\n\r\n    handleButtonClick() {\r\n        this.setState({ running: true, msg: \"Please wait...\" });\r\n        var emptyFiels = false;\r\n        for (var value in this.state)\r\n            if (this.state[value] == \"\" && value != \"running\" && value != \"msg\")\r\n                emptyFiels = true;\r\n        if (emptyFiels)\r\n            alert(\"Please complete all required fields!\");\r\n        else {\r\n            let request = `http://127.0.0.1:5000/api/confluence_sync/${this.state.sourceLink}&${this.state.destinationLink}&${this.state.jopUser}&${this.state.jopPassword}&${this.state.sourceId}&${this.state.adasUser}&${this.state.adasPassword}&${this.state.destinationID}&${this.state.destinationSpace}`;\r\n\r\n            axios.post(request)\r\n                .then(response => {\r\n                    //this.setState({ result: response.data });\r\n\r\n                    console.log(response.data)\r\n                    if (response.data == \"Success\")\r\n                        this.setState({ msg: \"Pages imported succesfully!\" });\r\n                    else\r\n                        this.setState({ msg: \"Error importing pages! Please check the input fields and the access rights on both servers!\" });\r\n                    this.setState({running : false});\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"prm-background\">\r\n                <div style={{ display: \"flex\", justifyContent: \"space-evenly\", flexDirection: 'column', margin: \"2%\" }}>\r\n                    <h1 className='script-title'>Import Honda Confluence Pages</h1>\r\n\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-evenly\", margin: \"2%\" }} >\r\n                        <form style={{ display: \"flex\", justifyContent: \"space-evenly\", flexDirection: 'column', margin: \"2%\" }} >\r\n                            <h2>Source</h2>\r\n\r\n                            <Select\r\n                                onChange={this.handleSelectChange}\r\n                                options={[\r\n                                    { name: \"sourceLink\", value: 'adas', label: 'ADAS' },\r\n                                    { name: \"sourceLink\", value: 'honda', label: 'Honda' },\r\n                                ]} />\r\n                            {/*\r\n                            <label>\r\n                                <p>Confluence link</p>\r\n                                <input type=\"text\" name=\"sourceLink\" onChange={this.handleChange} />\r\n                            </label>\r\n                            */}\r\n                            <label>\r\n                                <p>Username:</p>\r\n                                <input type=\"text\" name=\"jopUser\" onChange={this.handleChange} />\r\n                            </label>\r\n                            <label>\r\n                                <p>Password:</p>\r\n                                <input type=\"password\" name=\"jopPassword\" onChange={this.handleChange} />\r\n                            </label>\r\n                            <label>\r\n                                <p>Page Root:</p>\r\n                                <input type=\"text\" name=\"sourceId\" onChange={this.handleChange} />\r\n                            </label><br />\r\n                        </form>\r\n                        <form style={{ display: \"flex\", justifyContent: \"space-evenly\", flexDirection: 'column', margin: \"2%\" }}>\r\n                            <h2>Destination</h2>\r\n\r\n                            <Select\r\n                                onChange={this.handleSelectChange}\r\n                                options={[\r\n                                    { name: \"destinationLink\", value: 'adas', label: 'ADAS' },\r\n                                    { name: \"destinationLink\", value: 'honda', label: 'Honda' },\r\n                                ]}\r\n                            />\r\n                            {/*\r\n                            <label>\r\n                                <p>Confluence link</p>\r\n                                <input type=\"text\" name=\"destinationLink\" onChange={this.handleChange} />\r\n                            </label>\r\n                            */}\r\n                            <label>\r\n                                <p>Username:</p>\r\n                                <input type=\"text\" name=\"adasUser\" onChange={this.handleChange} />\r\n                            </label>\r\n                            <label>\r\n                                <p>Password:</p>\r\n                                <input type=\"password\" name=\"adasPassword\" onChange={this.handleChange} />\r\n                            </label>\r\n                            <label>\r\n                                <p>Page Root:</p>\r\n                                <input type=\"text\" name=\"destinationID\" onChange={this.handleChange} />\r\n                            </label>\r\n                            <label>\r\n                                <p>Space Title:</p>\r\n                                <input type=\"text\" name=\"destinationSpace\" onChange={this.handleChange} />\r\n                            </label>\r\n                        </form>\r\n                    </div>\r\n                    {/* <Button className='scripts-btn' ref=\"btn\" onClick={this.handleButtonClick}>Import</Button>\r\n                    <Spinner ref=\"snr\"animation=\"grow\" variant=\"warning\" style={{ alignSelf: \"center\" }} hidden/>\r\n                    <h2 ref=\"suc\" hidden style={{ alignSelf: \"center\" }}>Pages imported succesfully!</h2>\r\n                    <h2 ref=\"err\" hidden style={{ alignSelf: \"center\" }}>Error importing pages! Please check the input fields and the access rights on both servers!</h2> */}\r\n\r\n                    <Button className='scripts-btn' onClick={this.handleButtonClick} disabled={this.state.running}>Import</Button>\r\n                    <Spinner ref=\"snr\" animation=\"grow\" variant=\"warning\" style={{ alignSelf: \"center\" }} hidden />\r\n                    <Spinner animation=\"grow\" variant=\"warning\" style={{ alignSelf: \"center\" }} hidden={!this.state.running} />\r\n                    <h2 ref=\"suc\" hidden style={{ alignSelf: \"center\" }}>Pages imported succesfully!</h2>\r\n                    <h2 style={{ alignSelf: \"center\" }}>{this.state.msg}</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}  ","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Home from \"./components/Home\";\r\nimport Team from \"./components/Team\"\r\nimport Prediction from \"./components/Prediction\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport TeamScripts from \"./components/TeamScripts\";\r\nimport CreateAS from \"./components/CreateAnalysis\";\r\nimport history from \"./history\";\r\nimport CleanUpHelper from \"./components/CleanUpHelper\";\r\nimport WallOfFame from \"./components/WallOfFame\";\r\nimport WallOfFameIMS from \"./components/WallOfFameIMS\";\r\nimport CreateEpicsHA22 from \"./components/CreateEpicsHA22\";\r\nimport CreateSS from \"./components/CreateStoriesWithSubtasks\";\r\nimport FolderStructure from \"./components/FolderStructure\";\r\nimport NamingConventions from \"./components/NamingConventions\";\r\nimport Footer from \"./components/Footer\";\r\nimport Contact from \"./components/Contact\";\r\nimport Instructions from \"./components/Instructions\";\r\nimport PrmNavBar from \"./components/PrmNavBar\";\r\nimport ErrorPage from \"./components/ErrorPage\";\r\nimport ConfluenceImporter from \"./components/ConfluenceImporter\"\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  render()\r\n  {  \r\n      return (\r\n        <div className='page-wrapper'>\r\n            <PrmNavBar/>\r\n          <div className='page-content'>\r\n            <React.Fragment>\r\n              <Router history={history}>\r\n                <Switch>\r\n                  <Route exact path=\"/\" render={() => <Home cisco={false} {...this.errorChange}  />} />\r\n                  <Route exact path=\"/prediction\" render={() => <Prediction />}/>\r\n                  <Route exact path=\"/statistics\" component={Statistics} />\r\n                  <Route exact path=\"/scripts\" component={TeamScripts} />\r\n                  <Route exact path=\"/jirascripts/create-analysis\" component={CreateAS} />\r\n                  <Route exact path=\"/jirascripts/create-stories-and-subtasks\" component={CreateSS} />\r\n                  <Route exact path=\"/jirascripts/clean-up\" component={CleanUpHelper} />\r\n                  <Route exact path=\"/jirascripts/walloffame\" component={WallOfFame} />\r\n                  <Route exact path=\"/imsscripts/walloffameims\" component={WallOfFameIMS} />\r\n                  <Route exact path=\"/jirascripts/script2\" component={CreateEpicsHA22} />\r\n                  <Route exact path=\"/imsscripts/naming-conventions\" component={NamingConventions} />\r\n                  <Route exact path=\"/imsscripts/folder-structure\" component={FolderStructure} />\r\n                  <Route exact path=\"/team\" component={Team} />\r\n                  <Route exact path=\"/contact\" component={Contact} />\r\n                  <Route exact path=\"/instructions\" component={Instructions} />\r\n                  <Route exact path=\"/confluence\" component={ConfluenceImporter} />\r\n                  <Route render={() => <ErrorPage errorText='Could not find the page'/>} />\r\n                </Switch>\r\n              </Router>\r\n            </React.Fragment>\r\n          </div>\r\n          <div className='page-footer'>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}