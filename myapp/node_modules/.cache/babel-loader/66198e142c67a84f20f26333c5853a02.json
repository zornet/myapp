{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\WallOfFameIMS.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { Dropdown } from \"react-bootstrap\";\nimport Table from 'react-bootstrap/Table';\nimport ErrorPage from './ErrorPage';\nimport \"../Styles/WallOfFame.css\";\nimport \"../Styles/ButtonsAndTitles.css\";\nconst issuetypes_rules = {\n  'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\n  'Realization Order': ['is_linked_to_parent_in_corresponding_state'],\n  'Feature Request': ['feature request doesnt_have_issues_if_in_invalid_state'],\n  'Change Request': ['change request doesnt_have_issues_if_in_invalid_state'],\n  'Analysis Task': ['analysis task doesnt_have_issues_if_in_invalid_state'],\n  'All issuetypes': []\n};\n\nfunction RenderTable(props) {\n  if (props.rules === '') {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \" \");\n  }\n\n  return console.log(props.rules.respects_runtime_transitions), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    variant: \"dark\",\n    className: \"myTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Rules\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Ok issues\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Not ok issues\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, Object.keys(props.rules).map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, item), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, props.rules[item].nr_ok), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, props.rules[item].nr_not_ok)))));\n}\n\nclass WallOfFameIMS extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeProjectDropdownItem = function (X) {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: () => this.updateSelectedProject(X),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, X);\n    };\n\n    this.makeIssuetypeDropdownItem = function (X) {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: () => this.updateSelectedIssuetype(X),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, X);\n    };\n\n    this.state = {\n      goButton: 0,\n      serializedProjects: [],\n      nrOkIssues: 'not set',\n      nrNotOkIssues: 'not set',\n      rules: '',\n      selectedProject: 'choose project',\n      selectedIssuetype: 'All issuetypes',\n      requestFailed: false,\n      errorMessage: \"\"\n    };\n    this.getSerializedProjects = this.getSerializedProjects.bind(this);\n    this.updateSelectedProject = this.updateSelectedProject.bind(this);\n    this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\n    this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\n    this.getResults = this.getResults.bind(this);\n    this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this); //calling this in the constructor in order to know what projects are available from the start\n\n    console.log(\"urmeaza sa apelez getserializedprojects\");\n    this.getSerializedProjects();\n    console.log(this.state.serializedProjects);\n  }\n\n  async getSerializedProjects() {\n    let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/serialized-queries\";\n    await axios.get(url).then(response => {\n      this.setState({\n        serializedProjects: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: \"Can't get response from server\"\n      });\n      this.setState({\n        requestFailed: true\n      });\n    });\n  }\n\n  updateSelectedProject(newValue) {\n    this.setState({\n      selectedProject: newValue\n    });\n  }\n\n  updateSelectedIssuetype(newValue) {\n    this.setState({\n      selectedIssuetype: newValue\n    });\n  }\n\n  getResults() {\n    let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/get-results\";\n    axios.post(url, {\n      \"filename\": this.state.selectedProject,\n      \"issuetypes\": [this.state.selectedIssuetype]\n    }).then(response => {\n      this.setState({\n        goButton: 1,\n        rules: response.data.rules,\n        nrOkIssues: response.data.nr_ok_issues,\n        nrNotOkIssues: response.data.nr_not_ok_issues\n      });\n      console.log(this.state.rules);\n    }).catch(error => {\n      this.setState({\n        errorMessage: \"Can't get response from server\"\n      });\n      this.setState({\n        requestFailed: true\n      });\n    });\n  }\n\n  render() {\n    if (this.state.requestFailed) return /*#__PURE__*/React.createElement(ErrorPage, {\n      errorText: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 16\n      }\n    });\n    console.log(this.state.rules);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"script-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"WallOfFame for IMS\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dropdowns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"mydropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, this.state.selectedProject), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, this.state.serializedProjects.map(this.makeProjectDropdownItem))), /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"mydropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, this.state.selectedIssuetype), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"scripts-btn\",\n      disabled: this.state.selectedProject === 'choose project',\n      onClick: this.getResults,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, \"Go\"))), /*#__PURE__*/React.createElement(RenderTable, {\n      rules: this.state.rules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  async componentDidMount() {\n    console.log(\"FROM DIDMOUNT\");\n    console.log(\"urmeaza sa apelez getserializedprojects\");\n    await this.getSerializedProjects();\n    console.log(this.state.serializedProjects);\n  }\n\n}\n\nexport default WallOfFameIMS;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/WallOfFameIMS.js"],"names":["React","axios","Button","Dropdown","Table","ErrorPage","issuetypes_rules","RenderTable","props","rules","console","log","respects_runtime_transitions","Object","keys","map","item","nr_ok","nr_not_ok","WallOfFameIMS","Component","constructor","makeProjectDropdownItem","X","updateSelectedProject","makeIssuetypeDropdownItem","updateSelectedIssuetype","state","goButton","serializedProjects","nrOkIssues","nrNotOkIssues","selectedProject","selectedIssuetype","requestFailed","errorMessage","getSerializedProjects","bind","getResults","url","get","then","response","setState","data","catch","error","newValue","post","nr_ok_issues","nr_not_ok_issues","render","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap'\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport ErrorPage from './ErrorPage';\r\nimport \"../Styles/WallOfFame.css\"\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\n\r\nconst issuetypes_rules = {\r\n    'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\r\n    'Realization Order': ['is_linked_to_parent_in_corresponding_state'],\r\n    'Feature Request': ['feature request doesnt_have_issues_if_in_invalid_state'],\r\n    'Change Request': ['change request doesnt_have_issues_if_in_invalid_state'],\r\n    'Analysis Task': ['analysis task doesnt_have_issues_if_in_invalid_state'],\r\n    'All issuetypes': []\r\n}\r\n\r\n\r\nfunction RenderTable(props) {\r\n    if (props.rules === '') {\r\n        return (\r\n            <p> </p>\r\n        );\r\n    }\r\n    return (\r\n        console.log(props.rules.respects_runtime_transitions),\r\n        <Table striped bordered hover variant=\"dark\" className='myTable'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Rules</th>\r\n                    <th>Ok issues</th>\r\n                    <th>Not ok issues</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    Object.keys(props.rules).map(item =>\r\n                        <tr>\r\n                            <td>{item}</td>\r\n                            <td>{props.rules[item].nr_ok}</td>\r\n                            <td>{props.rules[item].nr_not_ok}</td>\r\n                        </tr>\r\n                    )}\r\n            </tbody>\r\n        </Table>)\r\n}\r\n\r\nclass WallOfFameIMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            goButton: 0,\r\n            serializedProjects: [],\r\n            nrOkIssues: 'not set',\r\n            nrNotOkIssues: 'not set',\r\n            rules: '',\r\n            selectedProject: 'choose project',\r\n            selectedIssuetype: 'All issuetypes',\r\n            requestFailed: false,\r\n            errorMessage: \"\"\r\n        }\r\n        this.getSerializedProjects = this.getSerializedProjects.bind(this);\r\n        this.updateSelectedProject = this.updateSelectedProject.bind(this);\r\n        this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\r\n        this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\r\n        this.getResults = this.getResults.bind(this);\r\n        this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this);\r\n\r\n        //calling this in the constructor in order to know what projects are available from the start\r\n        console.log(\"urmeaza sa apelez getserializedprojects\");\r\n        this.getSerializedProjects();\r\n        console.log(this.state.serializedProjects);\r\n    }\r\n    async getSerializedProjects() {\r\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/serialized-queries\";\r\n        await axios.get(url)\r\n            .then(response => {\r\n                this.setState({ serializedProjects: response.data,\r\n            });\r\n            }).catch(error => {\r\n                this.setState({errorMessage: \"Can't get response from server\"});\r\n                this.setState({requestFailed: true});\r\n                \r\n              });\r\n    }\r\n\r\n    updateSelectedProject(newValue) {\r\n        this.setState({ selectedProject: newValue });\r\n    }\r\n    makeProjectDropdownItem = function (X) {\r\n        return (\r\n            <Dropdown.Item onClick={() => this.updateSelectedProject(X)}>{X}</Dropdown.Item>\r\n        );\r\n    }\r\n    updateSelectedIssuetype(newValue) {\r\n        this.setState({ selectedIssuetype: newValue });\r\n    }\r\n    makeIssuetypeDropdownItem = function (X) {\r\n        return (\r\n            <Dropdown.Item onClick={() => this.updateSelectedIssuetype(X)}>{X}</Dropdown.Item>\r\n        );\r\n    }\r\n    getResults() {\r\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/get-results\"\r\n        axios.post(url, {\r\n            \"filename\": this.state.selectedProject,\r\n            \"issuetypes\": [this.state.selectedIssuetype]\r\n        }).then(response => {\r\n            this.setState({\r\n                goButton: 1,\r\n                rules: response.data.rules,\r\n                nrOkIssues: response.data.nr_ok_issues,\r\n                nrNotOkIssues: response.data.nr_not_ok_issues\r\n            });\r\n            console.log(this.state.rules);\r\n        }).catch(error => {\r\n            this.setState({errorMessage: \"Can't get response from server\"});\r\n            this.setState({requestFailed: true});\r\n            \r\n          });\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.requestFailed)\r\n        return <ErrorPage errorText = {this.state.errorMessage}/>\r\n        console.log(this.state.rules)\r\n        return (\r\n            <div className=\"prm-background\">\r\n                <h1 class=\"script-title\">WallOfFame for IMS</h1>\r\n                <div class=\"dropdowns\">\r\n                    <Dropdown className='mydropdown'>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {this.state.selectedProject}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            {this.state.serializedProjects.map(this.makeProjectDropdownItem)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Dropdown className='mydropdown'>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {this.state.selectedIssuetype}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <div>\r\n                        <Button className='scripts-btn' disabled={this.state.selectedProject === 'choose project'} onClick={this.getResults}>Go</Button>\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <Button disabled={this.state.selectedProject == 'choose project'}>Go</Button>\r\n                </div> \r\n                 <Greetings project={this.state.selectedProject} issuetype={this.state.selectedIssuetype}></Greetings> */}\r\n                {/* <Results nrOkIssues={this.state.nrOkIssues} nrNotOkIssues={this.state.nrNotOkIssues} project={this.state.selectedProject}></Results> */}\r\n                <RenderTable rules={this.state.rules}></RenderTable>\r\n            </div>\r\n        );\r\n    }\r\n    async componentDidMount() {\r\n        console.log(\"FROM DIDMOUNT\");\r\n        console.log(\"urmeaza sa apelez getserializedprojects\");\r\n        await this.getSerializedProjects();\r\n        console.log(this.state.serializedProjects);\r\n    }\r\n}\r\n\r\n\r\nexport default WallOfFameIMS;\r\n"]},"metadata":{},"sourceType":"module"}