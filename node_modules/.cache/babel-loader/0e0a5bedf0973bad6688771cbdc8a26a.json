{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\CreateAnalysis.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { TextareaAutosize, FormHelperText } from \"@material-ui/core\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass CreateAS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      epicKeys: [],\n      analysisKeys: [],\n      tickets: '',\n      show: \"false\"\n    };\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleButtonClick(event) {\n    let featureRequest = \"http://127.0.0.1:5000/api/jira/create-analysis\";\n    fetch(featureRequest, {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        epicKeys: Object.keys(data),\n        analysisKeys: this.getValues(data),\n        tickets: data,\n        show: \"true\"\n      });\n      console.log(this.state.tickets);\n    }); // axios.post('http://127.0.0.1:5000/api/jira/create-analysis').then(response=>{\n    //   console.log(response);\n    //   alert(Object.keys(response.data[1]));\n    // }).catch(error=>{console.log(error)})\n  }\n\n  getValues(dictionary) {\n    var value = [];\n    var i = 0;\n\n    for (var key in dictionary) {\n      value[i] = dictionary[key];\n      i++;\n    }\n\n    return value;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        flexDirection: 'column',\n        margin: \"2%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"script-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, \"ADC420HA22 Analysis Story creation\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"scripts-btn\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Create Analysis story for epics in classified\")), console.log(this.state.tickets), Object.keys(this.state.tickets).map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Analysis story \", /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      href: \"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + this.state.tickets[item],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 32\n      }\n    }, this.state.tickets[item]), \" created for \", /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      href: \"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 186\n      }\n    }, item)))));\n  }\n\n}\n\nconst btnStyle = {\n  height: '10vh',\n  width: '25vw',\n  fontSize: '150%',\n  position: 'absolute',\n  left: '50%',\n  top: '25%',\n  transform: 'translate(-50%, -50%)'\n};\nconst listContent = {\n  textAlign: 'center'\n};\nexport default CreateAS;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/CreateAnalysis.js"],"names":["React","TextareaAutosize","FormHelperText","Button","ListGroup","axios","CreateAS","Component","constructor","props","state","epicKeys","analysisKeys","tickets","show","handleButtonClick","bind","event","featureRequest","fetch","method","then","response","json","data","setState","Object","keys","getValues","console","log","dictionary","value","i","key","render","display","justifyContent","flexDirection","margin","map","item","btnStyle","height","width","fontSize","position","left","top","transform","listContent","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { TextareaAutosize, FormHelperText } from \"@material-ui/core\";\r\nimport { Button, ListGroup } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass CreateAS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      epicKeys:[],\r\n      analysisKeys: [],\r\n      tickets:'',\r\n      show: \"false\",\r\n    }\r\n\r\n    this.handleButtonClick=this.handleButtonClick.bind(this);\r\n\r\n  }\r\n\r\n   handleButtonClick(event){\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/jira/create-analysis\";\r\n    fetch(featureRequest, {method:'POST'})\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          epicKeys: Object.keys(data),\r\n          analysisKeys: this.getValues(data),\r\n          tickets: data,\r\n          show: \"true\",\r\n        });\r\n        console.log(this.state.tickets);\r\n      });      \r\n     \r\n      // axios.post('http://127.0.0.1:5000/api/jira/create-analysis').then(response=>{\r\n      //   console.log(response);\r\n      //   alert(Object.keys(response.data[1]));\r\n      // }).catch(error=>{console.log(error)})\r\n  }\r\n  \r\n  getValues(dictionary){\r\n    var value=[];\r\n    var i=0;\r\n    for(var key in dictionary){\r\n      value[i] = dictionary[key];\r\n      i++;\r\n    }\r\n      return value;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"prm-background\">\r\n            <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n              <h1 className='script-title'>ADC420HA22 Analysis Story creation</h1>\r\n              <Button className='scripts-btn' onClick={this.handleButtonClick}>Create Analysis story for epics in classified</Button>\r\n            </div>\r\n            {\r\n              console.log(this.state.tickets)\r\n            }\r\n          \r\n            {\r\n            Object.keys(this.state.tickets).map(item =>\r\n              <div>\r\n              <ListGroup.Item>\r\n                Analysis story <a target=\"_blank\" href={\"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + this.state.tickets[item]}>{this.state.tickets[item]}</a> created for <a target=\"_blank\" href={\"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + item}>{item}</a>\r\n              </ListGroup.Item>\r\n              </div>\r\n              )\r\n            }\r\n      </div> \r\n        \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst btnStyle={\r\n  height:'10vh',\r\n  width:'25vw',\r\n  fontSize:'150%',\r\n  position: 'absolute', left: '50%', top: '25%',\r\n  transform: 'translate(-50%, -50%)'\r\n}\r\n\r\nconst listContent={\r\n  textAlign:'center',\r\n}\r\n\r\nexport default CreateAS;"]},"metadata":{},"sourceType":"module"}