{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\CreateStoriesWithSubtasks.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ListGroup, Button } from \"react-bootstrap\";\nimport ErrorPage from \"./ErrorPage\";\nimport \"../Styles/ButtonsAndTitles.css\";\n\nclass CreateSS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticketInfo: [],\n      requestFailed: false,\n      errorMessage: \"\"\n    };\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleButtonClick(event) {\n    let featureRequest = \"http://127.0.0.1:5000/api/jira/create-stories\";\n    fetch(featureRequest, {\n      method: 'POST'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      } else return response.json();\n    }).then(data => {\n      this.setState({\n        ticketInfo: data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: \"Can't get response from server\"\n      });\n      this.setState({\n        requestFailed: true\n      });\n      console.log('error: ' + error);\n      console.log('error: ' + this.state.requestFailed);\n      console.log('error: ' + this.state.errorMessage);\n    });\n  }\n\n  render() {\n    if (this.state.requestFailed) return /*#__PURE__*/React.createElement(ErrorPage, {\n      errorText: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        flexDirection: 'column',\n        margin: \"2%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"script-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"ADC420HA22 Stories/subtasks creation\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"scripts-btn\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Create Stories for epics in accepted\")), console.log(this.state.ticketInfo), this.state.ticketInfo.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Story \", /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: \"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, item), \" and its subtasks created succesfully.\"))));\n  }\n\n}\n\nexport default CreateSS;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/CreateStoriesWithSubtasks.js"],"names":["React","ListGroup","Button","ErrorPage","CreateSS","Component","constructor","props","state","ticketInfo","requestFailed","errorMessage","handleButtonClick","bind","event","featureRequest","fetch","method","then","response","ok","Error","status","json","data","setState","catch","error","console","log","render","display","justifyContent","flexDirection","margin","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass CreateSS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketInfo:[],\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    }\r\n\r\n    this.handleButtonClick=this.handleButtonClick.bind(this);\r\n\r\n  }\r\n\r\n  handleButtonClick(event){\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/jira/create-stories\";\r\n    fetch(featureRequest, {method:'POST'})\r\n      .then((response) => { if(!response.ok) {\r\n        throw new Error(response.status);\r\n        }\r\n        else return response.json()})\r\n      .then((data) => {\r\n        this.setState({\r\n          ticketInfo: data,\r\n        });\r\n\r\n      }).catch((error) => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        console.log('error: ' + error);\r\n        console.log('error: ' + this.state.requestFailed);\r\n        console.log('error: ' + this.state.errorMessage);\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    \r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexDirection:'column', margin:\"2%\"}}>\r\n          <h1 className='script-title' >ADC420HA22 Stories/subtasks creation</h1>\r\n          <Button className='scripts-btn' onClick={this.handleButtonClick}>Create Stories for epics in accepted</Button>\r\n        </div> \r\n        {\r\n          console.log(this.state.ticketInfo)\r\n        }\r\n        {\r\n            this.state.ticketInfo.map(item =>\r\n              <div>\r\n                \r\n              <ListGroup.Item>\r\n                Story <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://jira-c-adas-test.zone2.agileci.conti.de/browse/\" + item}>{item}</a> and its subtasks created succesfully.\r\n              </ListGroup.Item>\r\n              </div>\r\n            )\r\n            }     \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CreateSS;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}