{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\Prediction.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport Switch from \"@material-ui/core/Switch\";\n\nclass Prediction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textboxValue: \"\",\n      redirectToTicket: false,\n      ticket: \"\",\n      prediction: \"\",\n      checkedB: false,\n      ciscoDisplayState: \"Cisco Off\"\n    };\n    this.handleTextBoxChnage = this.handleTextBoxChnage.bind(this);\n    this.handleClickEvent = this.handleClickEvent.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n  }\n\n  handleTextBoxChnage(event) {\n    this.setState({\n      textboxValue: event.target.value\n    });\n  }\n\n  handleClickEvent(event) {\n    console.log(this.state.ciscoDisplayState);\n    console.log(\"am apasat buton\"); // let featureRequest =\n    //   \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\n    // fetch(featureRequest)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     this.setState({\n    //       ticket: data,\n    //     });\n    //     this.setState({\n    //       redirectToTicket: true,\n    //     });\n    //   });\n\n    let featureRequest = \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\n    fetch(featureRequest, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"ciscoState\": this.state.ciscoDisplayState\n      })\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        ticket: data\n      });\n      this.setState({\n        redirectToTicket: true\n      });\n    });\n  }\n\n  handleSwitch() {\n    if (this.state.checkedB == false) {\n      this.setState({\n        checkedB: true,\n        ciscoDisplayState: \"Cisco On\"\n      });\n    }\n\n    if (this.state.checkedB == true) {\n      this.setState({\n        checkedB: false,\n        ciscoDisplayState: \"Cisco Off\"\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToTicket === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ticket\",\n          state: {\n            ticket: this.state.ticket,\n            cisco: this.state.checkedB\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row-flex ml-2 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, this.state.ciscoDisplayState), /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.checkedB,\n      onChange: this.handleSwitch,\n      color: \"primary\",\n      name: \"checkedB\",\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prediction-form ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"text-box\",\n      type: \"text\",\n      placeholder: \"Issue link\",\n      onChange: this.handleTextBoxChnage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleClickEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Predict\")));\n  }\n\n}\n\nexport default Prediction;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/Prediction.js"],"names":["React","Button","Redirect","Switch","Prediction","Component","constructor","props","state","textboxValue","redirectToTicket","ticket","prediction","checkedB","ciscoDisplayState","handleTextBoxChnage","bind","handleClickEvent","handleSwitch","event","setState","target","value","console","log","featureRequest","fetch","method","headers","body","JSON","stringify","then","response","json","data","render","pathname","cisco"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nclass Prediction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      textboxValue: \"\",\r\n      redirectToTicket: false,\r\n      ticket: \"\",\r\n      prediction: \"\",\r\n      checkedB: false,\r\n      ciscoDisplayState: \"Cisco Off\",\r\n    };\r\n    this.handleTextBoxChnage = this.handleTextBoxChnage.bind(this);\r\n    this.handleClickEvent = this.handleClickEvent.bind(this);\r\n    this.handleSwitch = this.handleSwitch.bind(this);\r\n  }\r\n\r\n  handleTextBoxChnage(event) {\r\n    this.setState({ textboxValue: event.target.value });\r\n  }\r\n\r\n  handleClickEvent(event) {\r\n    console.log(this.state.ciscoDisplayState);\r\n    console.log(\"am apasat buton\");\r\n    // let featureRequest =\r\n    //   \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\r\n    // fetch(featureRequest)\r\n    //   .then((response) => response.json())\r\n    //   .then((data) => {\r\n    //     this.setState({\r\n    //       ticket: data,\r\n    //     });\r\n    //     this.setState({\r\n    //       redirectToTicket: true,\r\n    //     });\r\n    //   });\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\r\n    fetch(featureRequest,{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\"ciscoState\": this.state.ciscoDisplayState})\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          ticket: data,\r\n        });\r\n        this.setState({\r\n          redirectToTicket: true,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSwitch() {\r\n    if (this.state.checkedB == false) {\r\n      this.setState({\r\n        checkedB: true,\r\n        ciscoDisplayState: \"Cisco On\",\r\n      });\r\n    }\r\n    if (this.state.checkedB == true) {\r\n      this.setState({\r\n        checkedB: false,\r\n        ciscoDisplayState: \"Cisco Off\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirectToTicket === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/ticket\",\r\n            state: {\r\n              ticket: this.state.ticket,\r\n              cisco: this.state.checkedB,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div class=\"row-flex ml-2 mt-4\">\r\n          <h3>{this.state.ciscoDisplayState}</h3>\r\n          <Switch\r\n            checked={this.state.checkedB}\r\n            onChange={this.handleSwitch}\r\n            color=\"primary\"\r\n            name=\"checkedB\"\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n        </div>\r\n        <div class=\"prediction-form ml-2\">\r\n          <input\r\n            class=\"text-box\"\r\n            type=\"text\"\r\n            placeholder=\"Issue link\"\r\n            onChange={this.handleTextBoxChnage}\r\n          />\r\n          <Button variant=\"primary\" onClick={this.handleClickEvent}>\r\n            Predict\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prediction;"]},"metadata":{},"sourceType":"module"}