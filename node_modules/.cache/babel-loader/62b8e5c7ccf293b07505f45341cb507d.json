{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\WallOfFame.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PrmNavBar from \"./PrmNavBar\";\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Button } from 'react-bootstrap';\nimport { Dropdown } from \"react-bootstrap\";\nconst issuetypes_rules = {\n  'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\n  'Story': ['is_linked_to_parent_in_corresponding_state'],\n  'Epic': ['epic doesnt_have_issues_if_in_invalid_state'],\n  'All issuetypes': []\n};\n\nfunction Greetings(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, props.project), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, props.issuetype));\n}\n\nfunction Results(props) {\n  if (props.nrOkIssues == 'not set') {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \" \");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"walloffame-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Number of ok tickets: \", props.nrOkIssues), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Number of not ok tickets:\", props.nrNotOkIssues));\n}\n\nclass WallOfFame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeProjectDropdownItem = function (X) {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: () => this.updateSelectedProject(X),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, X);\n    };\n\n    this.makeIssuetypeDropdownItem = function (X) {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: () => this.updateSelectedIssuetype(X),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, X);\n    };\n\n    this.state = {\n      serializedProjects: [],\n      nrOkIssues: 'not set',\n      nrNotOkIssues: 'not set',\n      selectedProject: 'choose project',\n      selectedIssuetype: 'All issuetypes'\n    };\n    this.getSerializedProjects = this.getSerializedProjects.bind(this);\n    this.updateSelectedProject = this.updateSelectedProject.bind(this);\n    this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\n    this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\n    this.getResults = this.getResults.bind(this);\n    this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this); //calling this in the constructor in order to know what projects are available from the start\n    // console.log(\"urmeaza sa apelez getserializedprojects\");\n    // this.getSerializedProjects();\n    // console.log(this.state.serializedProjects);\n  }\n\n  async getSerializedProjects() {\n    let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFame/serialized-projects\";\n    await axios.get(url).then(response => {\n      this.setState({\n        serializedProjects: response.data\n      });\n    });\n  }\n\n  updateSelectedProject(newValue) {\n    this.setState({\n      selectedProject: newValue\n    });\n  }\n\n  updateSelectedIssuetype(newValue) {\n    this.setState({\n      selectedIssuetype: newValue\n    });\n  }\n\n  getResults() {\n    let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFame/get-results\";\n    axios.post(url, {\n      \"project\": this.state.selectedProject,\n      \"issuetypes\": [this.state.selectedIssuetype]\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        nrOkIssues: response.data.nr_ok_issues,\n        nrNotOkIssues: response.data.nr_not_ok_issues\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PrmNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"wof-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"WallOfFame\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dropdowns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"mydropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, this.state.selectedProject), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, this.state.serializedProjects.map(this.makeProjectDropdownItem))), /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"mydropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, this.state.selectedIssuetype), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.selectedProject == 'choose project',\n      onClick: this.getResults,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Go\"))), /*#__PURE__*/React.createElement(Results, {\n      nrOkIssues: this.state.nrOkIssues,\n      nrNotOkIssues: this.state.nrNotOkIssues,\n      project: this.state.selectedProject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  async componentDidMount() {\n    console.log(\"FROM DIDMOUNT\");\n    console.log(\"urmeaza sa apelez getserializedprojects\");\n    await this.getSerializedProjects();\n    console.log(this.state.serializedProjects);\n  }\n\n}\n\nexport default WallOfFame;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/WallOfFame.js"],"names":["React","PrmNavBar","axios","Select","Button","Dropdown","issuetypes_rules","Greetings","props","project","issuetype","Results","nrOkIssues","nrNotOkIssues","WallOfFame","Component","constructor","makeProjectDropdownItem","X","updateSelectedProject","makeIssuetypeDropdownItem","updateSelectedIssuetype","state","serializedProjects","selectedProject","selectedIssuetype","getSerializedProjects","bind","getResults","url","get","then","response","setState","data","newValue","post","console","log","nr_ok_issues","nr_not_ok_issues","render","map","Object","keys","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PrmNavBar from \"./PrmNavBar\";\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Button } from 'react-bootstrap'\nimport { Dropdown } from \"react-bootstrap\";\n\n\nconst issuetypes_rules = {\n    'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\n    'Story': ['is_linked_to_parent_in_corresponding_state'],\n    'Epic': ['epic doesnt_have_issues_if_in_invalid_state'],\n    'All issuetypes': []\n}\n\nfunction Greetings(props) {\n    return (\n        <div>\n            <h2>{props.project}</h2>\n            <h2>{props.issuetype}</h2>\n        </div>\n    );\n}\n\nfunction Results(props){\n    if(props.nrOkIssues == 'not set'){\n        return(\n          <p> </p>  \n        );\n    }\n    return(\n        <div class=\"walloffame-results\">\n            <h3>Number of ok tickets: {props.nrOkIssues}</h3>\n            <h3>Number of not ok tickets:{props.nrNotOkIssues}</h3>\n        </div>\n    )\n}\n\nclass WallOfFame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            serializedProjects: [],\n            nrOkIssues: 'not set',\n            nrNotOkIssues: 'not set',\n            selectedProject: 'choose project',\n            selectedIssuetype: 'All issuetypes'\n        }\n        this.getSerializedProjects = this.getSerializedProjects.bind(this);\n        this.updateSelectedProject = this.updateSelectedProject.bind(this);\n        this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\n        this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\n        this.getResults = this.getResults.bind(this);\n        this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this);\n\n        //calling this in the constructor in order to know what projects are available from the start\n        // console.log(\"urmeaza sa apelez getserializedprojects\");\n        // this.getSerializedProjects();\n        // console.log(this.state.serializedProjects);\n    }\n    async getSerializedProjects() {\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFame/serialized-projects\";\n        await axios.get(url)\n            .then(response => {\n                this.setState({ serializedProjects: response.data });\n            });\n    }\n\n    updateSelectedProject(newValue) {\n        this.setState({ selectedProject: newValue });\n    }\n    makeProjectDropdownItem = function (X) {\n        return (\n            <Dropdown.Item onClick={() => this.updateSelectedProject(X)}>{X}</Dropdown.Item>\n        );\n    }\n    updateSelectedIssuetype(newValue) {\n        this.setState({ selectedIssuetype: newValue });\n    }\n    makeIssuetypeDropdownItem = function (X) {\n        return (\n            <Dropdown.Item onClick={() => this.updateSelectedIssuetype(X)}>{X}</Dropdown.Item>\n        );\n    }\n    getResults(){\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFame/get-results\"\n        axios.post(url,{\n            \"project\": this.state.selectedProject,\n            \"issuetypes\": [this.state.selectedIssuetype]\n        }).then(response => {\n            console.log(response.data);\n            this.setState({ nrOkIssues: response.data.nr_ok_issues,\n                            nrNotOkIssues: response.data.nr_not_ok_issues});\n        });\n    }\n\n\n    render() {\n        return (\n            <div className=\"prm-background\">\n                <PrmNavBar></PrmNavBar>\n                <h1 class=\"wof-title\">WallOfFame</h1>\n                <div class=\"dropdowns\">\n                    <Dropdown   className='mydropdown'>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {this.state.selectedProject}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {this.state.serializedProjects.map(this.makeProjectDropdownItem)}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown  className='mydropdown'>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {this.state.selectedIssuetype}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem)}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <div>\n                        <Button  disabled={this.state.selectedProject == 'choose project'} onClick={this.getResults}>Go</Button>\n                    </div>\n                </div>\n                {/* <div>\n                    <Button disabled={this.state.selectedProject == 'choose project'}>Go</Button>\n                </div> */}\n                {/* <Greetings project={this.state.selectedProject} issuetype={this.state.selectedIssuetype}></Greetings> */}\n                <Results  nrOkIssues={this.state.nrOkIssues} nrNotOkIssues={this.state.nrNotOkIssues} project={this.state.selectedProject}></Results>\n            </div>\n        );\n    }\n    async componentDidMount() {\n        console.log(\"FROM DIDMOUNT\");\n        console.log(\"urmeaza sa apelez getserializedprojects\");\n        await this.getSerializedProjects();\n        console.log(this.state.serializedProjects);\n    }\n}\n\n\nexport default WallOfFame;\n"]},"metadata":{},"sourceType":"module"}