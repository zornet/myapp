{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\Prediction.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport Switch from \"@material-ui/core/Switch\";\nimport ErrorPage from \"./ErrorPage\";\nimport \"../Styles/ButtonsAndTitles.css\";\n\nclass Prediction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textboxValue: \"\",\n      redirectToTicket: false,\n      ticket: \"\",\n      prediction: \"\",\n      checkedB: false,\n      ciscoDisplayState: \"Cisco Off\",\n      requestFailed: false,\n      errorMessage: \"\"\n    };\n    this.handleTextBoxChnage = this.handleTextBoxChnage.bind(this);\n    this.handleClickEvent = this.handleClickEvent.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n  }\n\n  handleTextBoxChnage(event) {\n    this.setState({\n      textboxValue: event.target.value\n    });\n  }\n\n  handleClickEvent(event) {\n    let featureRequest = \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\n    fetch(featureRequest).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      } else return response.json();\n    }).then(data => {\n      this.setState({\n        ticket: data\n      });\n      this.setState({\n        redirectToTicket: true\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: \"Can't get response from server\"\n      });\n      this.setState({\n        requestFailed: true\n      });\n      console.log('error: ' + error);\n      console.log('error: ' + this.state.requestFailed);\n      console.log('error: ' + this.state.errorMessage);\n    });\n  }\n\n  handleSwitch() {\n    if (this.state.checkedB === false) {\n      this.setState({\n        checkedB: true,\n        ciscoDisplayState: \"Cisco On\"\n      });\n    }\n\n    if (this.state.checkedB === true) {\n      this.setState({\n        checkedB: false,\n        ciscoDisplayState: \"Cisco Off\"\n      });\n    }\n  }\n\n  render() {\n    if (this.state.requestFailed) return /*#__PURE__*/React.createElement(ErrorPage, {\n      errorText: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    });\n\n    if (this.state.redirectToTicket === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ticket\",\n          state: {\n            ticket: this.state.ticket,\n            cisco: this.state.checkedB\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row-flex ml-2 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, this.state.ciscoDisplayState), /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.checkedB,\n      onChange: this.handleSwitch,\n      color: \"primary\",\n      name: \"checkedB\",\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prediction-form ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"text-box\",\n      type: \"text\",\n      placeholder: \"Issue link\",\n      onChange: this.handleTextBoxChnage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"scripts-btn\",\n      onClick: this.handleClickEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Predict\")));\n  }\n\n}\n\nexport default Prediction;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/Prediction.js"],"names":["React","Button","Redirect","Switch","ErrorPage","Prediction","Component","constructor","props","state","textboxValue","redirectToTicket","ticket","prediction","checkedB","ciscoDisplayState","requestFailed","errorMessage","handleTextBoxChnage","bind","handleClickEvent","handleSwitch","event","setState","target","value","featureRequest","fetch","then","response","ok","Error","status","json","data","catch","error","console","log","render","pathname","cisco"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport \"../Styles/ButtonsAndTitles.css\"\r\n\r\nclass Prediction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      textboxValue: \"\",\r\n      redirectToTicket: false,\r\n      ticket: \"\",\r\n      prediction: \"\",\r\n      checkedB: false,\r\n      ciscoDisplayState: \"Cisco Off\",\r\n      requestFailed: false,\r\n      errorMessage: \"\"\r\n    };\r\n    this.handleTextBoxChnage = this.handleTextBoxChnage.bind(this);\r\n    this.handleClickEvent = this.handleClickEvent.bind(this);\r\n    this.handleSwitch = this.handleSwitch.bind(this);\r\n  }\r\n\r\n  handleTextBoxChnage(event) {\r\n    this.setState({ textboxValue: event.target.value });\r\n  }\r\n\r\n  handleClickEvent(event) {\r\n    let featureRequest =\r\n      \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\r\n    fetch(featureRequest)\r\n      .then((response) => { if(!response.ok) {\r\n        throw new Error(response.status);\r\n        }\r\n        else return response.json()})\r\n      .then((data) => {\r\n        this.setState({\r\n          ticket: data,\r\n        });\r\n        this.setState({\r\n          redirectToTicket: true,\r\n        });\r\n      }).catch((error) => {\r\n        this.setState({errorMessage: \"Can't get response from server\"});\r\n        this.setState({requestFailed: true});\r\n        console.log('error: ' + error);\r\n        console.log('error: ' + this.state.requestFailed);\r\n        console.log('error: ' + this.state.errorMessage);\r\n      });\r\n  }\r\n\r\n  handleSwitch() {\r\n    if (this.state.checkedB === false) {\r\n      this.setState({\r\n        checkedB: true,\r\n        ciscoDisplayState: \"Cisco On\",\r\n      });\r\n    }\r\n    if (this.state.checkedB === true) {\r\n      this.setState({\r\n        checkedB: false,\r\n        ciscoDisplayState: \"Cisco Off\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.requestFailed)\r\n    return <ErrorPage errorText = {this.state.errorMessage}/>\r\n    \r\n    if (this.state.redirectToTicket === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/ticket\",\r\n            state: {\r\n              ticket: this.state.ticket,\r\n              cisco: this.state.checkedB,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div class=\"prm-background\">\r\n        <div class=\"row-flex ml-2 mt-4\">\r\n          <h3>{this.state.ciscoDisplayState}</h3>\r\n          <Switch\r\n            checked={this.state.checkedB}\r\n            onChange={this.handleSwitch}\r\n            color=\"primary\"\r\n            name=\"checkedB\"\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n        </div>\r\n        <div class=\"prediction-form ml-2\">\r\n          <input\r\n            class=\"text-box\"\r\n            type=\"text\"\r\n            placeholder=\"Issue link\"\r\n            onChange={this.handleTextBoxChnage}\r\n          />\r\n          <Button variant=\"primary\" className='scripts-btn' onClick={this.handleClickEvent}>\r\n            Predict\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prediction;\r\n"]},"metadata":{},"sourceType":"module"}