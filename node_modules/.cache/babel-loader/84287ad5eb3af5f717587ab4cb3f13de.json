{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\Prediction.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PrmNavBar from \"./PrmNavBar\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport Switch from \"@material-ui/core/Switch\";\n\nclass Prediction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textboxValue: \"\",\n      redirectToTicket: false,\n      ticket: \"\",\n      prediction: \"\",\n      checkedB: false,\n      ciscoDisplayState: \"Cisco Off\"\n    };\n    this.handleTextBoxChnage = this.handleTextBoxChnage.bind(this);\n    this.handleClickEvent = this.handleClickEvent.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n  }\n\n  handleTextBoxChnage(event) {\n    this.setState({\n      textboxValue: event.target.value\n    });\n  }\n\n  handleClickEvent(event) {\n    let featureRequest = \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\n    fetch(featureRequest).then(response => response.json()).then(data => {\n      this.setState({\n        ticket: data\n      });\n      this.setState({\n        redirectToTicket: true\n      });\n    });\n  }\n\n  handleSwitch() {\n    if (this.state.checkedB == false) {\n      this.setState({\n        checkedB: true,\n        ciscoDisplayState: \"Cisco On\"\n      });\n    }\n\n    if (this.state.checkedB == true) {\n      this.setState({\n        checkedB: false,\n        ciscoDisplayState: \"Cisco Off\"\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToTicket === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ticket\",\n          state: {\n            ticket: this.state.ticket,\n            cisco: this.state.checkedB\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PrmNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row-flex ml-2 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, this.state.ciscoDisplayState), /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.checkedB,\n      onChange: this.handleSwitch,\n      color: \"primary\",\n      name: \"checkedB\",\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"prediction-form ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"text-box\",\n      type: \"text\",\n      placeholder: \"Issue link\",\n      onChange: this.handleTextBoxChnage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleClickEvent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Predict\")));\n  }\n\n}\n\nexport default Prediction;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/Prediction.js"],"names":["React","PrmNavBar","Button","Redirect","Switch","Prediction","Component","constructor","props","state","textboxValue","redirectToTicket","ticket","prediction","checkedB","ciscoDisplayState","handleTextBoxChnage","bind","handleClickEvent","handleSwitch","event","setState","target","value","featureRequest","fetch","then","response","json","data","render","pathname","cisco"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,gBAAgB,EAAE,KAFP;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,UAAU,EAAE,EAJD;AAKXC,MAAAA,QAAQ,EAAE,KALC;AAMXC,MAAAA,iBAAiB,EAAE;AANR,KAAb;AAQA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,mBAAmB,CAACI,KAAD,EAAQ;AACzB,SAAKC,QAAL,CAAc;AAAEX,MAAAA,YAAY,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAA7B,KAAd;AACD;;AAEDL,EAAAA,gBAAgB,CAACE,KAAD,EAAQ;AACtB,QAAII,cAAc,GAChB,+CAA+C,KAAKf,KAAL,CAAWC,YAD5D;AAEAe,IAAAA,KAAK,CAACD,cAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAKR,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAEiB;AADI,OAAd;AAGA,WAAKR,QAAL,CAAc;AACZV,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAGD,KATH;AAUD;;AAEDQ,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKV,KAAL,CAAWK,QAAX,IAAuB,KAA3B,EAAkC;AAChC,WAAKO,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,iBAAiB,EAAE;AAFP,OAAd;AAID;;AACD,QAAI,KAAKN,KAAL,CAAWK,QAAX,IAAuB,IAA3B,EAAiC;AAC/B,WAAKO,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,iBAAiB,EAAE;AAFP,OAAd;AAID;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKrB,KAAL,CAAWE,gBAAX,KAAgC,IAApC,EAA0C;AACxC,0BACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFoB,UAAAA,QAAQ,EAAE,SADR;AAEFtB,UAAAA,KAAK,EAAE;AACLG,YAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MADd;AAELoB,YAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWK;AAFb;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;AAED,wBACE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWM,iBAAhB,CADF,eAEE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWK,QADtB;AAEE,MAAA,QAAQ,EAAE,KAAKK,YAFjB;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,eAYE;AAAK,MAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,YAHd;AAIE,MAAA,QAAQ,EAAE,KAAKH,mBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKE,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAZF,CADF;AA0BD;;AA3FsC;;AA8FzC,eAAeb,UAAf","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PrmNavBar from \"./PrmNavBar\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport Switch from \"@material-ui/core/Switch\";\n\nclass Prediction extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textboxValue: \"\",\n      redirectToTicket: false,\n      ticket: \"\",\n      prediction: \"\",\n      checkedB: false,\n      ciscoDisplayState: \"Cisco Off\",\n    };\n    this.handleTextBoxChnage = this.handleTextBoxChnage.bind(this);\n    this.handleClickEvent = this.handleClickEvent.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n  }\n\n  handleTextBoxChnage(event) {\n    this.setState({ textboxValue: event.target.value });\n  }\n\n  handleClickEvent(event) {\n    let featureRequest =\n      \"http://127.0.0.1:5000/api/ticket/features/\" + this.state.textboxValue;\n    fetch(featureRequest)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          ticket: data,\n        });\n        this.setState({\n          redirectToTicket: true,\n        });\n      });\n  }\n\n  handleSwitch() {\n    if (this.state.checkedB == false) {\n      this.setState({\n        checkedB: true,\n        ciscoDisplayState: \"Cisco On\",\n      });\n    }\n    if (this.state.checkedB == true) {\n      this.setState({\n        checkedB: false,\n        ciscoDisplayState: \"Cisco Off\",\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToTicket === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/ticket\",\n            state: {\n              ticket: this.state.ticket,\n              cisco: this.state.checkedB,\n            },\n          }}\n        />\n      );\n    }\n\n    return (\n      <div class=\"prm-background\">\n        <PrmNavBar></PrmNavBar>\n        <div class=\"row-flex ml-2 mt-4\">\n          <h3>{this.state.ciscoDisplayState}</h3>\n          <Switch\n            checked={this.state.checkedB}\n            onChange={this.handleSwitch}\n            color=\"primary\"\n            name=\"checkedB\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </div>\n        <div class=\"prediction-form ml-2\">\n          <input\n            class=\"text-box\"\n            type=\"text\"\n            placeholder=\"Issue link\"\n            onChange={this.handleTextBoxChnage}\n          />\n          <Button variant=\"primary\" onClick={this.handleClickEvent}>\n            Predict\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Prediction;\n"]},"metadata":{},"sourceType":"module"}