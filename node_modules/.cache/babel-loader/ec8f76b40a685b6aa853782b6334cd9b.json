{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UIC53606\\\\myapp\\\\src\\\\components\\\\WallOfFameIMS.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PrmNavBar from \"./PrmNavBar\";\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { Dropdown } from \"react-bootstrap\";\nimport Table from 'react-bootstrap/Table';\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\nconst issuetypes_rules = {\n  'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\n  'Realization Order': ['is_linked_to_parent_in_corresponding_state'],\n  'Feature Request': ['feature request doesnt_have_issues_if_in_invalid_state'],\n  'Change Request': ['change request doesnt_have_issues_if_in_invalid_state'],\n  'Analysis Task': ['analysis task doesnt_have_issues_if_in_invalid_state'],\n  'All issuetypes': []\n};\n\nfunction Greetings(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, props.project), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, props.issuetype));\n}\n\nfunction Results(props) {\n  if (props.project == '') {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \" \");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"walloffame-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Number of ok tickets: \", props.nrOkIssues), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Number of not ok tickets:\", props.nrNotOkIssues));\n}\n\nfunction RenderTable(props) {\n  if (props.rules == '') {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \" \");\n  }\n\n  return console.log(props.rules.respects_runtime_transitions), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    variant: \"dark\",\n    className: \"myTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Rules\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Ok issues\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Not ok issues\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, Object.keys(props.rules).map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, item), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, props.rules[item].nr_ok), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, props.rules[item].nr_not_ok)))));\n}\n\nclass WallOfFameIMS extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeProjectDropdownItem = function (X) {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: () => this.updateSelectedProject(X),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, X);\n    };\n\n    this.makeIssuetypeDropdownItem = function (X) {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: () => this.updateSelectedIssuetype(X),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, X);\n    };\n\n    this.state = {\n      goButton: 0,\n      serializedProjects: [],\n      nrOkIssues: 'not set',\n      nrNotOkIssues: 'not set',\n      rules: '',\n      selectedProject: 'choose project',\n      selectedIssuetype: 'All issuetypes'\n    };\n    this.getSerializedProjects = this.getSerializedProjects.bind(this);\n    this.updateSelectedProject = this.updateSelectedProject.bind(this);\n    this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\n    this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\n    this.getResults = this.getResults.bind(this);\n    this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this); //calling this in the constructor in order to know what projects are available from the start\n\n    console.log(\"urmeaza sa apelez getserializedprojects\");\n    this.getSerializedProjects();\n    console.log(this.state.serializedProjects);\n  }\n\n  async getSerializedProjects() {\n    let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/serialized-queries\";\n    await axios.get(url).then(response => {\n      this.setState({\n        serializedProjects: response.data\n      });\n    });\n  }\n\n  updateSelectedProject(newValue) {\n    this.setState({\n      selectedProject: newValue\n    });\n  }\n\n  updateSelectedIssuetype(newValue) {\n    this.setState({\n      selectedIssuetype: newValue\n    });\n  }\n\n  getResults() {\n    let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/get-results\";\n    axios.post(url, {\n      \"filename\": this.state.selectedProject,\n      \"issuetypes\": [this.state.selectedIssuetype]\n    }).then(response => {\n      this.setState({\n        goButton: 1,\n        rules: response.data.rules,\n        nrOkIssues: response.data.nr_ok_issues,\n        nrNotOkIssues: response.data.nr_not_ok_issues\n      });\n      console.log(this.state.rules);\n    });\n  }\n\n  render() {\n    console.log(this.state.rules);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prm-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PrmNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"wof-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"WallOfFame for IMS\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"dropdowns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"mydropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, this.state.selectedProject), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, this.state.serializedProjects.map(this.makeProjectDropdownItem))), /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"mydropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, this.state.selectedIssuetype), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.selectedProject == 'choose project',\n      onClick: this.getResults,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"Go\"))), /*#__PURE__*/React.createElement(RenderTable, {\n      rules: this.state.rules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  async componentDidMount() {\n    console.log(\"FROM DIDMOUNT\");\n    console.log(\"urmeaza sa apelez getserializedprojects\");\n    await this.getSerializedProjects();\n    console.log(this.state.serializedProjects);\n  }\n\n}\n\nexport default WallOfFameIMS;","map":{"version":3,"sources":["C:/Users/UIC53606/myapp/src/components/WallOfFameIMS.js"],"names":["React","PrmNavBar","axios","Button","Dropdown","Table","ThemeConsumer","issuetypes_rules","Greetings","props","project","issuetype","Results","nrOkIssues","nrNotOkIssues","RenderTable","rules","console","log","respects_runtime_transitions","Object","keys","map","item","nr_ok","nr_not_ok","WallOfFameIMS","Component","constructor","makeProjectDropdownItem","X","updateSelectedProject","makeIssuetypeDropdownItem","updateSelectedIssuetype","state","goButton","serializedProjects","selectedProject","selectedIssuetype","getSerializedProjects","bind","getResults","url","get","then","response","setState","data","newValue","post","nr_ok_issues","nr_not_ok_issues","render","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PrmNavBar from \"./PrmNavBar\";\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap'\nimport { Dropdown } from \"react-bootstrap\";\nimport Table from 'react-bootstrap/Table';\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\n\n\nconst issuetypes_rules = {\n    'Problem Report': ['respects_runtime_transitions', 'doesnt_have_children_if_in_invalid_state'],\n    'Realization Order': ['is_linked_to_parent_in_corresponding_state'],\n    'Feature Request': ['feature request doesnt_have_issues_if_in_invalid_state'],\n    'Change Request': ['change request doesnt_have_issues_if_in_invalid_state'],\n    'Analysis Task': ['analysis task doesnt_have_issues_if_in_invalid_state'],\n    'All issuetypes': []\n}\n\nfunction Greetings(props) {\n    return (\n        <div>\n            <h2>{props.project}</h2>\n            <h2>{props.issuetype}</h2>\n        </div>\n    );\n}\n\nfunction Results(props) {\n    if (props.project == '') {\n        return (\n            <p> </p>\n        );\n    }\n    return (\n        <div class=\"walloffame-results\">\n            <h3>Number of ok tickets: {props.nrOkIssues}</h3>\n            <h3>Number of not ok tickets:{props.nrNotOkIssues}</h3>\n        </div>\n    )\n}\nfunction RenderTable(props) {\n    if (props.rules == '') {\n        return (\n            <p> </p>\n        );\n    }\n    return (\n        console.log(props.rules.respects_runtime_transitions),\n        <Table striped bordered hover variant=\"dark\" className='myTable'>\n            <thead>\n                <tr>\n                    <th>Rules</th>\n                    <th>Ok issues</th>\n                    <th>Not ok issues</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    Object.keys(props.rules).map(item =>\n                        <tr>\n                            <td>{item}</td>\n                            <td>{props.rules[item].nr_ok}</td>\n                            <td>{props.rules[item].nr_not_ok}</td>\n                        </tr>\n                )}\n            </tbody>\n        </Table>)\n}\n\nclass WallOfFameIMS extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goButton: 0,\n            serializedProjects: [],\n            nrOkIssues: 'not set',\n            nrNotOkIssues: 'not set',\n            rules: '',\n            selectedProject: 'choose project',\n            selectedIssuetype: 'All issuetypes'\n        }\n        this.getSerializedProjects = this.getSerializedProjects.bind(this);\n        this.updateSelectedProject = this.updateSelectedProject.bind(this);\n        this.updateSelectedIssuetype = this.updateSelectedIssuetype.bind(this);\n        this.makeIssuetypeDropdownItem = this.makeIssuetypeDropdownItem.bind(this);\n        this.getResults = this.getResults.bind(this);\n        this.makeProjectDropdownItem = this.makeProjectDropdownItem.bind(this);\n\n        //calling this in the constructor in order to know what projects are available from the start\n        console.log(\"urmeaza sa apelez getserializedprojects\");\n        this.getSerializedProjects();\n        console.log(this.state.serializedProjects);\n    }\n    async getSerializedProjects() {\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/serialized-queries\";\n        await axios.get(url)\n            .then(response => {\n                this.setState({ serializedProjects: response.data });\n            });\n    }\n\n    updateSelectedProject(newValue) {\n        this.setState({ selectedProject: newValue });\n    }\n    makeProjectDropdownItem = function (X) {\n        return (\n            <Dropdown.Item onClick={() => this.updateSelectedProject(X)}>{X}</Dropdown.Item>\n        );\n    }\n    updateSelectedIssuetype(newValue) {\n        this.setState({ selectedIssuetype: newValue });\n    }\n    makeIssuetypeDropdownItem = function (X) {\n        return (\n            <Dropdown.Item onClick={() => this.updateSelectedIssuetype(X)}>{X}</Dropdown.Item>\n        );\n    }\n    getResults() {\n        let url = \"http://127.0.0.1:5000/api/PRM-scripts/WallOfFameIMS/get-results\"\n        axios.post(url, {\n            \"filename\": this.state.selectedProject,\n            \"issuetypes\": [this.state.selectedIssuetype]\n        }).then(response => {\n            this.setState({\n                goButton: 1,\n                rules: response.data.rules,\n                nrOkIssues: response.data.nr_ok_issues,\n                nrNotOkIssues: response.data.nr_not_ok_issues\n            });\n            console.log(this.state.rules);\n        });\n    }\n\n\n    render() {\n        console.log(this.state.rules)\n        return (\n            <div className=\"prm-background\">\n                <PrmNavBar></PrmNavBar>\n                <h1 class=\"wof-title\">WallOfFame for IMS</h1>\n                <div class=\"dropdowns\">\n                    <Dropdown  className='mydropdown'>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {this.state.selectedProject}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {this.state.serializedProjects.map(this.makeProjectDropdownItem)}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown  className='mydropdown'>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {this.state.selectedIssuetype}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {Object.keys(issuetypes_rules).map(this.makeIssuetypeDropdownItem)}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <div>\n                        <Button  disabled={this.state.selectedProject == 'choose project'} onClick={this.getResults}>Go</Button>\n                    </div>\n                </div>\n                {/* <div>\n                    <Button disabled={this.state.selectedProject == 'choose project'}>Go</Button>\n                </div> \n                 <Greetings project={this.state.selectedProject} issuetype={this.state.selectedIssuetype}></Greetings> */}\n                {/* <Results nrOkIssues={this.state.nrOkIssues} nrNotOkIssues={this.state.nrNotOkIssues} project={this.state.selectedProject}></Results> */}\n                <RenderTable rules={this.state.rules}></RenderTable>\n            </div>\n        );\n    }\n    async componentDidMount() {\n        console.log(\"FROM DIDMOUNT\");\n        console.log(\"urmeaza sa apelez getserializedprojects\");\n        await this.getSerializedProjects();\n        console.log(this.state.serializedProjects);\n    }\n}\n\n\nexport default WallOfFameIMS;\n"]},"metadata":{},"sourceType":"module"}